package com.iso27001planner.service;

import com.iso27001planner.entity.Risk;
import com.iso27001planner.repository.RiskRepository;
import com.lowagie.text.*;
import com.lowagie.text.Font;
import com.lowagie.text.Image;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.awt.*;
import java.io.OutputStream;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Objects;
import java.util.stream.Stream;

@Service
@RequiredArgsConstructor
public class PdfExportService {

    private final RiskRepository riskRepository;

    public void writeRisksToPdf(Long companyId, OutputStream outputStream) throws Exception {
        List<Risk> risks = riskRepository.findByCompany_Id(companyId);
        Document document = new Document();
        PdfWriter.getInstance(document, outputStream);
        document.open();

        Font font = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 14);
        document.add(new Paragraph("Risk Report", font));
        document.add(new Paragraph(" "));

        for (Risk r : risks) {
            document.add(new Paragraph("Title: " + r.getTitle()));
            document.add(new Paragraph("Asset: " + (r.getAsset() != null ? r.getAsset().getName() : "")));
            document.add(new Paragraph("Threat: " + r.getThreat()));
            document.add(new Paragraph("Likelihood: " + r.getLikelihood()));
            document.add(new Paragraph("Impact: " + r.getImpact()));
            document.add(new Paragraph("Severity: " + r.getSeverity()));
            document.add(new Paragraph("Due Date: " + r.getDueDate()));
            document.add(new Paragraph("-----------------------------"));
        }

        document.close();
    }

    public void writeRisksToPdfTable(Long companyId, OutputStream outputStream) throws Exception {
        List<Risk> risks = riskRepository.findByCompany_Id(companyId);

        Document document = new Document(PageSize.A4);
        PdfWriter.getInstance(document, outputStream);
        document.open();

        // 🖼️ Logo (assumed in resources/static/logo.png)
        try {
            Image logo = Image.getInstance(Objects.requireNonNull(getClass().getClassLoader().getResource("static/LOGO.png")));
            logo.scaleToFit(90, 90);
            logo.setAlignment(Element.ALIGN_CENTER);
            document.add(logo);
        } catch (Exception e) {
            System.err.println("⚠️ Logo not found or failed to load.");
        }

        // 📄 Title
        Font titleFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 18);
        Paragraph title = new Paragraph("ISO 27001 – Risk Report", titleFont);
        title.setAlignment(Element.ALIGN_CENTER);
        document.add(title);
        document.add(Chunk.NEWLINE);

        // 📊 Table
        PdfPTable table = new PdfPTable(6);
        table.setWidthPercentage(100);
        table.setWidths(new int[]{3, 3, 2, 2, 2, 2});

        Font headerFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 12);
        Stream.of("Title", "Asset", "Likelihood", "Impact", "Severity", "Due Date").forEach(col -> {
            PdfPCell cell = new PdfPCell(new Phrase(col, headerFont));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(Color.LIGHT_GRAY);
            table.addCell(cell);
        });

        Font rowFont = FontFactory.getFont(FontFactory.HELVETICA, 11);
        for (Risk r : risks) {
            table.addCell(new Phrase(r.getTitle(), rowFont));
            table.addCell(new Phrase(r.getAsset() != null ? r.getAsset().getName() : "-", rowFont));
            table.addCell(new Phrase(r.getLikelihood(), rowFont));
            table.addCell(new Phrase(r.getImpact(), rowFont));
            table.addCell(new Phrase(r.getSeverity(), rowFont));
            table.addCell(new Phrase(r.getDueDate() != null ? r.getDueDate() : "-", rowFont));
        }

        document.add(table);
        document.add(Chunk.NEWLINE);

        // 📥 Footer
        Font footerFont = FontFactory.getFont(FontFactory.HELVETICA_OBLIQUE, 10, Color.GRAY);
        Paragraph footer = new Paragraph("Generated by Protected Consulting ISO 27001 Planner – " + LocalDateTime.now(), footerFont);
        footer.setAlignment(Element.ALIGN_CENTER);
        document.add(footer);

        document.close();
    }
}
